<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- namespace表示当前映射文件要映射的接口 -->
 <mapper namespace="team.itfour.store.dao.GoodsBrandDao">
 	
 	 <resultMap type="GoodsBrand" id="GoodsBrandMap">
      <id column="brandNo" property="brandNo" />
      <result column="brandName" property="brandName"/>
    
        
       <!-- 使用一对一关系映射，一个商品对应一种商品类型 -->
     <association property="provider" javaType="Provider">
        <id column="providerNo" property="providerNo"/>
        <result column="providerName" property="providerName"/>
     </association>   
            
    </resultMap>
 
 	
 	<!-- 对于多次使用的sql代码可以使用sql标签统一进行编写，在使用的位置使用include标签进行包含 -->
     <sql id="pagerWhere">
       <where>
           <if test="condition!=null and condition.brandName!=null ">
            and  brandName like   concat('%',#{condition.brandName},'%')
           </if>
       </where>
     </sql>
 
  <sql id="fromsql">
      from goods_brand b join provider p on b.providerNo=p.providerNo 
     </sql>
 
   <!-- 使用select标签配置查询sql，id配置查询的方法名 -->
   <select id="findByPager" resultMap="GoodsBrandMap" parameterType="Pager">
     select b.brandNo,b.brandName,p.providerNo,p.providerName <include refid="fromsql" />
        <!-- 包含公共的sql的where查询条件 -->
        <include refid="pagerWhere" />
       <if test="start !=null and size !=null">
          limit  #{start},#{size}
       </if>
   </select>
   
      <select id="findTotalByPager" resultType="int" parameterType="Pager">
        <!-- 统计查询的关联表和查询条件必须跟数据查询一致；统计结果只有一行一列不需要进行分页 -->
        select count(*) from goods_brand
        <!-- 包含公共的sql的where查询条件 -->
         <include refid="pagerWhere" />
   </select>
   
   <insert id="add" parameterType="GoodsBrand"> 
       insert into goods_brand(brandName,providerNo)  
       values(#{brandName},#{provider.providerNo})
    </insert>
    
 	<update id="edit" parameterType="GoodsBrand">
  	 	update goods_brand
  	 	<set>
  	 	    <if test="brandName !=null">brandName=#{brandName},</if>
  	 		<if test="provider !=null and provider.providerNo!=null">providerNo = #{provider.providerNo}, </if>
  	 	</set>
  	 	where brandNo = #{brandNo}
  	 </update>
 
 	 <delete id="delete" parameterType="GoodsBrand">
  	 	delete from goods_brand where brandNo= #{brandNo}
  	 </delete>
 	
 </mapper> 
  